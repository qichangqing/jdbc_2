jdbc面向接口编程的思想：在所有操作数据库的代码中不会出现具体的接口实现类，而是将具体实现类配置在配置文件中，增加了代码的可移植性，并且使得程序员
更容易的编写适配到其他数据库的代码。
jdbc获取链接的过程：通过将带有四个配置参数（username,password,url,driverClass）的配置文件使用类加载器的流读入，properties加载参数，再加载驱动类和注册进
DriverManager来获取链接。
statement：此接口需要sql语句的拼接，使用不方便并且存在sql注入的不安全性，并且不支持blob的操作，和批量数据操作效率低。而preparedStatement使用占位符
参数只需通过占位符填写即可，方便使用且效率高，批量和blob操作都支持。
将结果集和javabean进行转换的重要技术：resultsetMetadata提供了对sql查询列数和查询字段别名的方法，反射技术，通过反射技术new一个该类的对象，并通过field或method
进行对对象的参数副值。获取对应方法是通过字段别名获取的。
数据库增删改查的一般步骤：获取链接，预编译sql，填充占位符，执行sql语句，结果集转换为java对象
java事务：对于事务的操作需要将自动提交关闭，在执行sql语句的时候保证每一条都是使用同一个链接执行的，执行完成并提交。完成方法：将connection作为参数传入到调用的方法
中，不要在该方法中关闭链接，只需关闭他自己产生的对象。
对于特定的Java对象可以定义对他的数据库操作类，定义操作接口，编写继承basedao的类并实现操作接口，可以实现增删改查操作。
数据库连接池可以起到和线程池相似的作用，能够提高对链接的利用率，减轻服务器压力，在获取数据库连接池的链接时用到类静态代码块的支持，使得每次使用的连接池都是同一个
，从同一个连接池中获取链接。
dbutils提供了对通用sql执行的支持，通过queryrunner可以接受链接，sql，resultsethandler，args参数进行增删改操作，其中增删改操作传入的resultsethandler可以自定义
也可以使用包提供的hanlder。
在开发中使用数据库连接池（druid）+dbutils（queryrunner）可以实现对数据库的操作。
